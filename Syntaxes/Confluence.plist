<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>confluence</string>
		<string>spec</string>
		<string>brief</string>
	</array>
	<key>firstLineMatch</key>
	<string>confluence</string>
	<key>keyEquivalent</key>
	<string>^~C</string>
	<key>name</key>
	<string>Confluence</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(^h[1-6]([&lt;&gt;=()]+)?)(\([^)]*\)|{[^}]*})*(\.)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.heading.confluence</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.confluence</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.heading.confluence</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^$</string>
			<key>name</key>
			<string>markup.heading.confluence</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>text.html.basic</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^bq([&lt;&gt;=()]+)?)(\([^)]*\)|{[^}]*})*(\.)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.blockquote.confluence</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.confluence</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.blockquote.confluence</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^$</string>
			<key>name</key>
			<string>markup.quote.confluence</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>text.html.basic</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^fn[0-9]+([&lt;&gt;=()]+)?)(\([^)]*\)|{[^}]*})*(\.)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.footnote.confluence</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.confluence</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.footnote.confluence</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^$</string>
			<key>name</key>
			<string>markup.other.footnote.confluence</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>text.html.basic</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^table([&lt;&gt;=()]+)?)(\([^)]*\)|{[^}]*})*(\.)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.footnote.confluence</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.confluence</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.footnote.confluence</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^$</string>
			<key>name</key>
			<string>markup.other.table.confluence</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>text.html.basic</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(?=\S)</string>
			<key>end</key>
			<string>^$</string>
			<key>name</key>
			<string>meta.paragraph.confluence</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.paragraph.confluence</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.paragraph.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(^p([&lt;&gt;=()]+)?)(\([^)]*\)|{[^}]*})*(\.)</string>
					<key>name</key>
					<string>entity.name.section.paragraph.confluence</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>text.html.basic</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Since html is valid in Textile include the html patterns</string>
			<key>include</key>
			<string>text.html.basic</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>inline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>&amp; is handled automagically by confluence, so we match it to avoid text.html.basic from flagging it</string>
					<key>match</key>
					<string>&amp;(?![A-Za-z0-9]+;)</string>
					<key>name</key>
					<string>text.html.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\*+(\([^)]*\)|{[^}]*})*(\s+|$)</string>
					<key>name</key>
					<string>markup.list.unnumbered.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^#+(\([^)]*\)|{[^}]*})*\s+</string>
					<key>name</key>
					<string>markup.list.numbered.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.other.link.title.confluence</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.title.confluence</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.reference.link.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
								"								# Start name, etc
									(?:							# Attributes
										# I swear, this is how the language is defined,
										# couldnt make it up if I tried.
										(?:\([^)]+\))?(?:\{[^}]+\})?(?:\[[^\]]+\])?
											# Class, Style, Lang
									  | (?:\{[^}]+\})?(?:\[[^\]]+\])?(?:\([^)]+\))?
											# Style, Lang, Class
									  | (?:\[[^\]]+\])?(?:\{[^}]+\})?(?:\([^)]+\))?
											# Lang, Style, Class
									)?
									([^"]+?)					# Link name
									\s?							# Optional whitespace
									(?:\(([^)]+?)\))?
								":								# End name
								(\w[-\w_]*)						# Linkref
								(?=[^\w\/;]*?(&lt;|\s|$))			# Catch closing punctuation
																#  and end of meta.link
					</string>
					<key>name</key>
					<string>meta.link.reference.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.other.link.title.confluence</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.title.confluence</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
								"								# Start name, etc
									(?:							# Attributes
										# I swear, this is how the language is defined,
										# couldnt make it up if I tried.
										(?:\([^)]+\))?(?:\{[^}]+\})?(?:\[[^\]]+\])?
											# Class, Style, Lang
									  | (?:\{[^}]+\})?(?:\[[^\]]+\])?(?:\([^)]+\))?
											# Style, Lang, Class
									  | (?:\[[^\]]+\])?(?:\{[^}]+\})?(?:\([^)]+\))?
											# Lang, Style, Class
									)?
									([^"]+?)					# Link name
									\s?							# Optional whitespace
									(?:\(([^)]+?)\))?
								":								# End Name
								(\S*?(?:\w|\/|;))				# URL
								(?=[^\w\/;]*?(&lt;|\s|$))			# Catch closing punctuation
																#  and end of meta.link
					</string>
					<key>name</key>
					<string>meta.link.inline.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.image.confluence</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.other.link.description.confluence</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
								\!										# Open image
								(\&lt;|\=|\&gt;)?								# Optional alignment
								(?:										# Attributes
									# I swear, this is how the language is defined,
									# couldnt make it up if I tried.
									(?:\([^)]+\))?(?:\{[^}]+\})?(?:\[[^\]]+\])?
										# Class, Style, Lang
								  | (?:\{[^}]+\})?(?:\[[^\]]+\])?(?:\([^)]+\))?
										# Style, Lang, Class
								  | (?:\[[^\]]+\])?(?:\{[^}]+\})?(?:\([^)]+\))?
										# Lang, Style, Class
								)?
								(?:\.[ ])?            					# Optional
								([^\s(!]+?)         					# Image URL
								\s?                						# Optional space
								(?:\(((?:[^\(\)]|\([^\)]+\))+?)\))?   	# Optional title
								\!										# Close image
								(?:
									:
									(\S*?(?:\w|\/|;))					# URL
									(?=[^\w\/;]*?(&lt;|\s|$))				# Catch closing punctuation
								)?
					</string>
					<key>name</key>
					<string>meta.image.inline.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\|(\([^)]*\)|{[^}]*})*(\\\||.)+\|</string>
					<key>name</key>
					<string>markup.other.table.cell.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\B(\*\*?)((\([^)]*\)|{[^}]*}|\[[^]]+\]){0,3})(\S.*?\S|\S)\1\B</string>
					<key>name</key>
					<string>markup.bold.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\B-((\([^)]*\)|{[^}]*}|\[[^]]+\]){0,3})(\S.*?\S|\S)-\B</string>
					<key>name</key>
					<string>markup.deleted.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\B\+((\([^)]*\)|{[^}]*}|\[[^]]+\]){0,3})(\S.*?\S|\S)\+\B</string>
					<key>name</key>
					<string>markup.inserted.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:\b|\s)_((\([^)]*\)|{[^}]*}|\[[^]]+\]){0,3})(\S.*?\S|\S)_(?:\b|\s)</string>
					<key>name</key>
					<string>markup.italic.confluence</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.confluence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\B([@\^~%]|\?\?)((\([^)]*\)|{[^}]*}|\[[^]]+\]){0,3})(\S.*?\S|\S)\1</string>
					<key>name</key>
					<string>markup.italic.phrasemodifiers.confluence</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Footnotes</string>
					<key>match</key>
					<string>(?&lt;!w)\[[0-9+]\]</string>
					<key>name</key>
					<string>entity.name.tag.confluence</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.html.confluence</string>
	<key>uuid</key>
	<string>68F0B1A5-3274-4E85-8B3A-A481C5F5B194</string>
</dict>
</plist>
